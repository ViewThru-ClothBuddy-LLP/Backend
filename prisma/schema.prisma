// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  phoneNumber   String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  Buyer  Buyer?  
  Seller Seller?  

  @@map("users")
}

model Buyer {
  id      Int    @id @default(autoincrement())
  userId  Int?    @unique  
  user    User?   @relation(fields: [userId], references: [id], onDelete: Cascade) 
  address String?
  budget  Float?

  @@map("buyers")
}

model Seller {
  id            Int    @id @default(autoincrement())
  user          User   @relation(fields: [userId], references: [id], onDelete: Cascade) // Fixed
  userId        Int    @unique  
  storeName     String
  gstNumber     String @unique
  adharNumber   String @unique
  panCardNumber String @unique

  products      Product[]

  @@map("sellers")
}

model Product {
  id               Int             @id @default(autoincrement())
  title            String
  description      String
  price            Float
  sellerId        Int
  seller          Seller           @relation(fields: [sellerId], references: [id], onDelete: Cascade)

  productDetails  ProductDetails?  @relation
 
  variants        ProductVariant[]
  images          ProductImage[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  

  @@map("products")
  @@index([price])  
  @@index([sellerId])  
}

model ProductDetails {
  id               Int      @id @default(autoincrement())
  product          Product  @relation(fields: [productId], references: [id], onDelete: Cascade) 
  productId        Int      @unique  

  fabricType       Json    
  origin           String
  closureType      String
  countryOfOrigin  String

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("product_details")
  @@index([countryOfOrigin])  
}

model ProductVariant {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   Int
  color       String
  size        String
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("product_variants")
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int
  url        String
  createdAt  DateTime @default(now())

  @@map("product_images")
}
