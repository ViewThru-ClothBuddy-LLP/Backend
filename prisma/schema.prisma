// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  BUYER
  SELLER
  ADMIN
}

model User {
  id String @id @default(uuid())
  email String @unique 
  name String
  password String
  phoneNumber String?
  refreshTokens RefreshToken[]
  role          Role         @default(USER)
  isVerified    Boolean      @default(false)
  passwordResetToken PasswordResetToken?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  Buyer Buyer?   @relation("UserToBuyer")  
  Seller Seller? @relation("UserToSeller")
}

model RefreshToken{
  id String @id @default(uuid())
  token String @unique
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Buyer {
  id   String @id @default(uuid()) @map("userId")
  BuyerId String @unique
  user User   @relation("UserToBuyer", fields: [BuyerId], references: [id])
  address String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([id]) 
}

model Seller {
  id   String @id @default(uuid()) @map("userId")
  sellerId String @unique
  user User  @relation("UserToSeller", fields: [sellerId], references: [id])

  storeName   String
  aadharCard  String @unique 
  panCard     String @unique 
  gstNumber   String? @unique 
  rating      Float?  
  isVerified  Boolean @default(false) 

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([id]) 
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  userId    String   @unique
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}





